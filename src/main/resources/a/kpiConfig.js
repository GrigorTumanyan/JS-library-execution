const APP_UPDATE=function(e){return`=Timestamp(Only(${e}ETLAsOfDate),'YYYY-MM-DD') & 'T' & Timestamp(Only(${e}ETLAsOfDate),'hh:mm:ss') & '' & Replace(Timezone(),'GMT','')`},CURR_MONTH='H_Date_Filter={">=$(=MonthStart(Today(2)))<=$(=MonthEnd(Today(2)))"}',CURR_MONTH_LY='H_Date_Filter={">=$(=MonthStart(Today(2),-12))<=$(=MonthEnd(Today(2),-12))"}',CURR_MONTH_LY_LBL="=Date(MonthStart(Today(2),-12),'MMM YYYY')",PREV_MONTH_PM='H_Calendar.Month_DT={">=$(=MonthStart(Today(2),-1))<=$(=MonthEnd(Today(2),-1))"}',PREV_MONTH_LY_PM='H_Calendar.Month_DT={">=$(=MonthStart(Today(2),-13))<=$(=MonthEnd(Today(2),-13))"}',PREV_MONTH_LY_LBL_PM="=Date(MonthStart(Today(2),-13),'MMM YYYY')",PREV_12_MONTHS_FROM_LM_PM='H_Calendar.Month_DT={">=$(=MonthStart(Today(2),-13))<=$(=MonthEnd(Today(2),-1))"}',PREV_12_MONTHS='H_Date_Filter={">=$(=MonthStart(Today(2),-12))<=$(=MonthEnd(Today(2)))"}',PREV_14_MONTHS='H_Calendar.Month_DT={">=$(=MonthStart(Today(2),-14))<=$(=MonthEnd(Today(2),-1))"}',PREV_15_MONTHS='H_Date_Filter={">=$(=MonthStart(Today(2),-14))<=$(=MonthEnd(Today(2)))"}',CURR_QUARTER='H_Date_Filter={">=$(=QuarterStart(Today(2)))<=$(=QuarterEnd(Today(2)))"}',PREV_QUARTER_LY='H_Date_Filter={">=$(=QuarterStart(Today(2),-4))<=$(=QuarterEnd(Today(2),-4))"}',PREV_4_QUARTERS='H_Date_Filter={">=$(=QuarterStart(Today(2),-4))<=$(=MonthEnd(Today(2)))"}',PREV_4_QUARTERS_PM='H_Calendar.Month_DT={">=$(=QuarterStart(Today(2),-4))<=$(=MonthEnd(Today(2)))"}',CURR_YEAR='H_Date_Filter={">=$(=YearStart(Today(2)))<=$(=YearEnd(Today(2)))"}',PREV_YEAR='H_Date_Filter={">=$(=YearStart(Today(2),-1))<=$(=YearEnd(Today(2),-1))"}',PREV_YEAR_LBL="=Text(Year(Today(2))-1)";function getKpiConfig(e,a=0){function t(a,t,i=1,o=""){let n=e[a].selections,s=e[a].prefix||"",r=o,l="",u="";switch(n.forEach((function(e){e.value&&(("DEF"==t||"H_Date_Filter"!=e.field&&"H_Calendar.Month_DT"!=e.field)&&(r+=s+e.field+'={"'+e.value+'"},'),("DEF"==t||"H_Date_Filter"!=e.field&&"H_Calendar.Month_DT"!=e.field)&&(u+=`*GetSelectedCount(${s}${e.field})`),l+=`${s}${e.field}=P(${s}${e.field}),`)})),r=r.slice(0,-1),l=l.slice(0,-1),t){case"CURR_MONTH":r+=`,${s}${CURR_MONTH}`;break;case"CURR_MONTH_LY":u="",r+=`,${s}${CURR_MONTH_LY}`;break;case"CURR_QUARTER":r+=`,${s}${CURR_QUARTER}`;break;case"CURR_QUARTER_LY":u="",r+=`,${s}${CURR_QUARTER_LY}`;break;case"PREV_QUARTER_LY":u="",r+=`,${s}${PREV_QUARTER_LY}`;break;case"CURR_YEAR":r+=`,${s}${CURR_YEAR}`;break;case"PREV_YEAR":u="",r+=`,${s}${PREV_YEAR}`;break;case"PREV_MONTH_PM":u="",r+=`,${s}${PREV_MONTH_PM}`;break;case"PREV_MONTH_LY_PM":u="",r+=`,${s}${PREV_MONTH_LY_PM}`;break;case"PREV_12_MONTHS_FROM_LM_PM":u="",r+=`,${s}${PREV_12_MONTHS_FROM_LM_PM}`;break;case"PREV_12_MONTHS":u="",r+=`,${s}${PREV_12_MONTHS}`;break;case"PREV_14_MONTHS":u="",r+=`,${s}${PREV_14_MONTHS}`;break;case"PREV_15_MONTHS":u="",r+=`,${s}${PREV_15_MONTHS}`;break;case"PREV_4_QUARTERS":u="",r+=`,${s}${PREV_4_QUARTERS}`;break;case"PREV_4_QUARTERS_PM":u="",r+=`,${s}${PREV_4_QUARTERS_PM}`;break;case"LIFE_TO_DATE":case"CURRENTLY":break;default:console.log(`period="${t}" is unknown`)}return r=1==i?`count({1<${r}>} ${s}H_Group.USERID)*RangeMin(1,count({<${l}>} ${s}H_Group.USERID))${u}`:`{<${r}>}`,r}function i(e){let a=e?.round||0,t=e?.sort||"";switch(e._checkCurrentPeriod=Number.isFinite(e._checkCurrentPeriod)?e._checkCurrentPeriod:0,e._checkPreviousPeriod=Number.isFinite(e._checkPreviousPeriod)?e._checkPreviousPeriod:0,e._checkChartPeriod=Number.isFinite(e._checkChartPeriod)?e._checkChartPeriod:0,e.type){case"AREA_CHART":for(let t=0;t<e?.data?.length;t++){if(0==e._checkCurrentPeriod&&(e.data[t].currentValue=0),0==e._checkPreviousPeriod&&(e.data[t].previousValue=0),0==e._checkChartPeriod)e.data[t].series=[];else{const i=o(e.data[t].series,e.defData.series);let n=[];i.map((e=>{n.push(parseFloat(e[1].value.toFixed(a)))})),e.data[t].series=n}e.data[t].currentValue=parseFloat(e.data[t].currentValue.toFixed(a)),e.data[t].previousValue=parseFloat(e.data[t].previousValue.toFixed(a))}0==e._checkCurrentPeriod&&0==e._checkPreviousPeriod&&0==e._checkChartPeriod?e.isData=!1:e.isData=!0;break;case"LIST":for(let i=0;i<e?.data?.length;i++)if(0==e._checkCurrentPeriod)e.data[i].series=[];else{n(e.data[i].series,"NULL"),""!=t&&s(e.data[i].series,"value",t,a);const r=e.defData?o(e.data[i].series,e.defData.series):e.data[i].series;let l=[];r.map((e=>{l.push({key:e[0].text,value:parseFloat(Number(e[1].value).toFixed(a))})})),e.data[i].series=l}0==e._checkCurrentPeriod||0==e.data[0].series.length?e.isData=!1:e.isData=!0;break;case"PIE_CHART":if(0==e._checkCurrentPeriod&&(e.data[0].currentValue=0),0==e._checkPreviousPeriod&&(e.data[0].previousValue=0),0==e._checkCurrentPeriod)e.data[0].series=124!=e?.id?[]:[{key:"Distance Billed:",value:0},{key:"Reported:",value:0},{key:"Reported Late:",value:0}];else{n(e.data[0].series,"NULL"),""!=t&&s(e.data[0].series,"value",t,a);const i=e.defData?o(e.data[0].series,e.defData.series):e.data[0].series;let r=[];i.map((e=>{r.push({key:e[0].text,value:parseFloat(e[1].value.toFixed(a))})})),e.data[0].series=r}0==e._checkCurrentPeriod&&0==e._checkPreviousPeriod?e.isData=!1:e.isData=!0;break;case"DATA_BAR":for(let t=0;t<e?.data?.length;t++){if(0==e._checkCurrentPeriod)"total"in e.data[t]&&(e.data[t].total=0),"totalAmount"in e.data[t]&&(e.data[t].totalAmount=0),e.data[t].series=[];else{n(e.data[t].series,"NULL"),s(e.data[t].series,"value","desc",a);const i=e.data[t].series;let o=[];i.map((e=>{o.push({key:e[0].text,value:parseFloat(e[1].value.toFixed(a))})})),e.data[t].series=o}"total"in e.data[t]&&(e.data[t].total=parseFloat(e.data[t].total.toFixed(a))),"totalAmount"in e.data[t]&&(e.data[t].totalAmount=parseFloat(e.data[t].totalAmount.toFixed(a)))}0==e._checkCurrentPeriod?e.isData=!1:e.isData=!0;break;case"THERMOSTAT":if(0==e._checkCurrentPeriod)e.data[0].currentValue=0,e.data[0].series=[];else{s(e.data[0].series,"value","desc",a);const t=e.data[0].series;let i=[];t.map((e=>{0!=e[1].value&&i.push({key:e[0].text,value:parseFloat(e[1].value.toFixed(a))})})),e.data[0].series=i}e.data[0].currentValue=parseFloat(e.data[0].currentValue.toFixed(a)),0==e._checkCurrentPeriod?e.isData=!1:e.isData=!0;break;case"24x7":let i={};i[e.id]={},i[e.id][e.period]=0==e._checkChartPeriod?[]:function(e,a){let t={},i=[];try{e.map((e=>{let a="OTHERS"==e[1].text?"OTHERS":e[1].text.split("#")[1],i="OTHERS"==e[1].text?"OTHERS":e[1].text.split("#")[0];e[0].text in t||(t[e[0].text]={},t[e[0].text].topCompCodes=[]),t[e[0].text].topCompCodes.push({compDesc:i,compCode:a,count:e[2].value})})),Object.entries(t).forEach((e=>{e[1].topCompCodes.sort(((e,a)=>e.count>a.count&&"OTHERS"!=e.compCode?-1:1))})),Object.entries(t).forEach((e=>{e[1].topCompCodes.sort((function(e,a){if(e.count==a.count&&"OTHERS"!=e.compCode)return e.compDesc>a.compDesc?1:-1}))})),Object.entries(t).forEach((e=>{if(e[1].topCompCodes.length>6){let a=0;e[1].topCompCodes.map(((e,t)=>{t>=5&&(a+=e.count)})),e[1].topCompCodes=e[1].topCompCodes.slice(0,6),e[1].topCompCodes[5].count=a}})),Object.entries(t).forEach((e=>{a.map((a=>{a[0].text==e[0]&&a.map(((a,t)=>{t>0&&(e[1][a.label]="month"==a.label||"quarter"==a.label?a.text:Number(a.text))}))}))})),Object.entries(t).forEach((e=>{i.push(e[1])})),i.reverse(),Object.entries(i).forEach((e=>{6==e[1].topCompCodes.length&&(e[1].topCompCodes[5].compDesc="OTHERS",delete e[1].topCompCodes[5].compCode)}))}catch(e){console.error(e.message)}return i}(e.data[0].series,e.data[1].series),Object.assign(e,i),delete e.data,delete e.type,delete e.period,0==e._checkChartPeriod?e.isData=!1:e.isData=!0;break;case"PM":let r={};r[e.id]={},r[e.id][e.period]=0==e._checkChartPeriod?[]:function(e){let a={};e.map((e=>{a[e[0].text]={},e.map(((t,i)=>{i>0&&(a[e[0].text][t.label]="quarter"==t.label?t.text:Number(t.text))}))}));let t=[];return Object.entries(a).forEach((e=>{t.push(e[1])})),t.reverse(),t}(e.data[0].series),Object.assign(e,r),delete e.data,delete e.type,delete e.period,0==e._checkChartPeriod?e.isData=!1:e.isData=!0;break;default:console.log(`KPI type="${e.type}" is unknown`)}delete e.defData,delete e.round,delete e.sort,delete e._checkCurrentPeriod,delete e._checkPreviousPeriod,delete e._checkChartPeriod}function o(e,a){let t=a.slice();return t.forEach((function(a,i){e.forEach((function(o,n){o[0].text==a[0].text&&t.splice(i,1,e[n])}))})),t}function n(e,a){e.forEach((function(t,i){t[0].text==a&&e.splice(i,1)}))}function s(e,a,t,i){let o;e.forEach((function(a,t){"Others"==a[0].text&&(o=a,e.splice(t,1))})),"desc"==t?(e.sort(((e,t)=>e[1][a]>t[1][a]&"Others"!=e[0].text?-1:1)),e.sort((function(e,a){if(Number(e[1].value).toFixed(i)==Number(a[1].value).toFixed(i)&&"Others"!=e[0].text)return e[0].text>a[0].text?1:-1}))):e.sort(((e,t)=>Number(e[1][a]).toFixed(i)-Number(t[1][a]).toFixed(i))),o&&e.push(o)}var r=[{id:106,kpi:"TotalRepairOrders",app:"maintenanceCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Total Repair Orders",kpi:3},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("MC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("maintenanceCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"MC.H_MonthYearShort",measure:`=Num(count(distinct ${t("maintenanceCharges","PREV_12_MONTHS",2)}  MC.Repairs),'#,##0')`,singleValueData:[{id:"currentValue",type:"value",expression:"=Num(Count(DISTINCT MC.Repairs),'#,##0')"},{id:"previousValue",type:"value",expression:`Num(Count(DISTINCT ${t("maintenanceCharges","CURR_MONTH_LY",2)} MC.Repairs),'#,##0')`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:107,kpi:"AvgChargePerRepairOrder",app:"maintenanceCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Average Charge Per Repair Order",kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("MC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("maintenanceCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"MC.H_MonthYearShort",measure:`Num(Alt(Sum(${t("maintenanceCharges","PREV_12_MONTHS",2)} MC.Total_Amt)/count(distinct ${t("maintenanceCharges","PREV_12_MONTHS",2)} MC.Repairs),0), MoneyFormat)`,additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(Alt(Sum(MC.Total_Amt)/Count(DISTINCT MC.Repairs),0), MoneyFormat)"},{id:"previousValue",type:"value",expression:`Num(Alt(Sum(${t("maintenanceCharges","CURR_MONTH_LY",2)} MC.Total_Amt)/Count(DISTINCT ${t("maintenanceCharges","CURR_MONTH_LY",2)} MC.Repairs),0), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:108,kpi:"MaintenanceCharges",app:"maintenanceCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Maintenance Charges",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("MC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("maintenanceCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"MC.H_MonthYearShort",measure:`Num(Sum(${t("maintenanceCharges","PREV_12_MONTHS",2)} MC.Total_Amt), MoneyFormat)`,additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(Sum(MC.Total_Amt), MoneyFormat)"},{id:"previousValue",type:"value",expression:`Num(Sum(${t("maintenanceCharges","CURR_MONTH_LY",2)} MC.Total_Amt), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:109,kpi:"MaintenanceCostCategories",app:"maintenanceCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Maintenance Cost Categories",kpi:4,toggle:"LB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("MC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([MC.Total_Amt]),4,0)<=3,[MC.H_Comp_Code_Desc],'NULL'),([MC.H_Comp_Code_Desc],(TEXT,ASCENDING)))",measure:"=Num(Sum([MC.Total_Amt]), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"total",type:"value",expression:"=Num(Sum(MC.Total_Amt), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:110,kpi:"UnitMaintenanceCosts",app:"maintenanceCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Unit Maintenance Costs",kpi:4,toggle:"LB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("MC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("maintenanceCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([MC.Total_Amt]),4,0)<=3,[MC.Penske Unit],'NULL'),([MC.Penske Unit],(TEXT,ASCENDING)))",measure:"=Num(Sum([MC.Total_Amt]), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"total",type:"value",expression:"=Num(Sum(MC.Total_Amt), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:120,kpi:"TopCalculatedCategory",app:"fuelTaxCompliance",additionalData:{periodType:"THIS_QUARTER",type:"LIST",name:"US"==e.fuelTaxCompliance.selections[0].value?"Top Calculated MPG":"Top Calculated KPL",sort:"desc",round:2,test:e.fuelTaxCompliance.selections,kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FTC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelTaxCompliance","CURR_QUARTER")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Alt(Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.DtrMiles)/Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.TotalFuel),0),4,0)<=5,[FTC.CategoryType],'NULL'),([FTC.CategoryType],(TEXT,DESCENDING)))",measure:"=Alt(Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.DtrMiles)/Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.TotalFuel),0)",additionalData:{name:"US"==e.fuelTaxCompliance.selections[0].value?"Top Calculated MPG (Contract)":"Top Calculated KPL (Contract)",type:"CONTRACT",toggle:"LB1",config:[{keyName:"Vehicle",valueName:"#"}]},singleValueData:[{id:"valueName",type:"text",expression:`If('${e.fuelTaxCompliance.selections[0].value}'='US', 'MPG', 'KPL')`}]},{id:"series2",dimension:"=Aggr(if(Rank(Alt(Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.DtrMiles)/Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.TotalFuel),0),4,0)<=5,[FTC.CategoryType],'NULL'),([FTC.CategoryType],(TEXT,DESCENDING)))",measure:"=Alt(Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.DtrMiles)/Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.TotalFuel),0)",additionalData:{name:"US"==e.fuelTaxCompliance.selections[0].value?"Top Calculated MPG (Rental)":"Top Calculated KPL (Rental)",type:"RENTAL",toggle:"LB2",config:[{keyName:"Vehicle",valueName:"#"}]},singleValueData:[{id:"valueName",type:"text",expression:`If('${e.fuelTaxCompliance.selections[0].value}'='US', 'MPG', 'KPL')`}]}],transform:e=>(i(e),e.data[0].config[0].valueName=e.data[0].valueName,e.data[1].config[0].valueName=e.data[1].valueName,delete e.data[0].valueName,delete e.data[1].valueName,e)},{id:121,kpi:"BottomCalculatedUnits",app:"fuelTaxCompliance",additionalData:{periodType:"THIS_QUARTER",type:"LIST",sort:"asc",round:2,kpi:4,toggle:"LB2",name:"US"==e.fuelTaxCompliance.selections[0].value?"Bottom Calculated MPG Units":"Bottom Calculated KPL Units"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FTC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelTaxCompliance","CURR_QUARTER")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Alt(Sum(FTC.DtrMiles)/Sum(FTC.TotalFuel)*(-1),0),4,0)<=4,[FTC.Penske Unit],'Others'),([FTC.Penske Unit],(TEXT,ASCENDING)))",measure:"=Alt(Sum(FTC.DtrMiles)/Sum(FTC.TotalFuel),0)",additionalData:{config:[{keyName:"Unit",valueName:"#"}]},singleValueData:[{id:"valueName",type:"text",expression:`If('${e.fuelTaxCompliance.selections[0].value}'='US', 'MPG', 'KPL')`}]}],transform:e=>(i(e),e.data[0].config[0].valueName=e.data[0].valueName,delete e.data[0].valueName,e)},{id:122,kpi:"TopUnderReportedUnits",app:"fuelTaxCompliance",additionalData:{periodType:"THIS_QUARTER",type:"LIST",name:"Top Under-Reported Units",sort:"desc",kpi:3,toggle:"LB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FTC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelTaxCompliance","CURR_QUARTER")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum(FTC.GapMiles),4,0)<=4,[FTC.Penske Unit],'Others'),([FTC.Penske Unit],(TEXT,ASCENDING)))",measure:"=Sum(FTC.GapMiles)",additionalData:{config:[{keyName:"Unit",valueName:"#",valueType:"NUMBER_NO_DECIMAL"}]},singleValueData:[{id:"valueName",type:"text",expression:`If('${e.fuelTaxCompliance.selections[0].value}'='US', 'Distance (Miles)', 'Distance (kilometers)')`}]}],transform:e=>(i(e),e.data[0].config[0].valueName=e.data[0].valueName,delete e.data[0].valueName,e)},{id:123,kpi:"ContractCompliance",app:"fuelTaxCompliance",additionalData:{periodType:"THIS_QUARTER",type:"PIE_CHART",name:"Contract Compliance",kpi:1,toggle:"LB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FTC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelTaxCompliance","CURR_QUARTER",1,'[FTC.H_Contract_Group]={"CONTRACT"},')},{id:"_checkPreviousPeriod",type:"value",expression:t("fuelTaxCompliance","PREV_QUARTER_LY",1,'[FTC.H_Contract_Group]={"CONTRACT"},')}],cubeData:[{id:"series",dimension:"=ValueList('Distance Billed:', 'Reported:', 'Reported Late:')",measure:"=If(ValueList('Distance Billed:', 'Reported:', 'Reported Late:') = 'Distance Billed:', Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.BilledMiles),\n                               If(ValueList('Distance Billed:', 'Reported:', 'Reported Late:') = 'Reported:', Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.DtrMiles),\n                                 If(Sum({<[FTC.H_Contract_Group]={\"CONTRACT\"}>} FTC.DtrMilesIP) - Sum({<[FTC.H_Contract_Group]={\"CONTRACT\"}>} FTC.DtrMiles)<=0,0,\n\t                              Sum({<[FTC.H_Contract_Group]={\"CONTRACT\"}>} FTC.DtrMilesIP) - Sum({<[FTC.H_Contract_Group]={\"CONTRACT\"}>} FTC.DtrMiles)) ))",additionalData:{config:[{key:"valueType",value:"#"}]},singleValueData:[{id:"currentValue",type:"value",expression:"=Alt(Round(Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.DtrMiles)/Sum({<[FTC.H_Contract_Group]={'CONTRACT'}>} FTC.BilledMiles)*100, 0.1), 0)"},{id:"previousValue",type:"value",expression:`=Alt(Round(Sum({<FTC.${PREV_QUARTER_LY}, [FTC.H_Contract_Group]={'CONTRACT'}>} FTC.DtrMiles)/Sum({<FTC.${PREV_QUARTER_LY}, [FTC.H_Contract_Group]={'CONTRACT'}>} FTC.BilledMiles)*100, 0.1), 0)`},{id:"value",type:"text",expression:`If('${e.fuelTaxCompliance.selections[0].value}'='US', 'MILES', 'KILOMETERS')`},{id:"valueType",type:"text",expression:"=Text('PERCENTAGE')"}]}],transform:e=>(i(e),e.data[0].config[0].value=e.data[0].value,delete e.data[0].value,e)},{id:124,kpi:"RentalCompliance",app:"fuelTaxCompliance",additionalData:{periodType:"THIS_QUARTER",type:"PIE_CHART",name:"Rental Compliance",kpi:1,toggle:"LB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FTC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelTaxCompliance","CURR_QUARTER",1,'[FTC.H_Contract_Group]={"RENTAL"},')},{id:"_checkPreviousPeriod",type:"value",expression:t("fuelTaxCompliance","PREV_QUARTER_LY",1,'[FTC.H_Contract_Group]={"RENTAL"},')}],cubeData:[{id:"series",dimension:"=ValueList('Distance Billed:', 'Reported:', 'Reported Late:')",measure:"=If(ValueList('Distance Billed:', 'Reported:', 'Reported Late:') = 'Distance Billed:', Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.BilledMiles),\n                               If(ValueList('Distance Billed:', 'Reported:', 'Reported Late:') = 'Reported:', Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.DtrMiles),\n                                 If(Sum({<[FTC.H_Contract_Group]={\"RENTAL\"}>} FTC.DtrMilesIP) - Sum({<[FTC.H_Contract_Group]={\"RENTAL\"}>} FTC.DtrMiles)<=0,0,\n\t                              Sum({<[FTC.H_Contract_Group]={\"RENTAL\"}>} FTC.DtrMilesIP) - Sum({<[FTC.H_Contract_Group]={\"RENTAL\"}>} FTC.DtrMiles)) ))",additionalData:{config:[{key:"valueType",value:"#"}]},singleValueData:[{id:"currentValue",type:"value",expression:"=Alt(Round(Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.DtrMiles)/Sum({<[FTC.H_Contract_Group]={'RENTAL'}>} FTC.BilledMiles)*100, 0.1), 0)"},{id:"previousValue",type:"value",expression:`=Alt(Round(Sum({<FTC.${PREV_QUARTER_LY}, [FTC.H_Contract_Group]={'RENTAL'}>} FTC.DtrMiles)/Sum({<FTC.${PREV_QUARTER_LY}, [FTC.H_Contract_Group]={'RENTAL'}>} FTC.BilledMiles)*100, 0.1), 0)`},{id:"value",type:"text",expression:`If('${e.fuelTaxCompliance.selections[0].value}'='US', 'MILES', 'KILOMETERS')`},{id:"valueType",type:"text",expression:"=Text('PERCENTAGE')"}]}],transform:e=>(i(e),e.data[0].config[0].value=e.data[0].value,delete e.data[0].value,e)},{id:96,kpi:"TotalRentalContracts",app:"rentalActivity",additionalData:{periodType:"THIS_YEAR",type:"AREA_CHART",name:"Total Rental Contracts",kpi:1,toggle:"LB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RA.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")},{id:"_checkPreviousPeriod",type:"value",expression:t("rentalActivity","PREV_YEAR")},{id:"_checkChartPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")}],cubeData:[{id:"series",dimension:"RA.H_MonthYearShort",measure:"=Num(Count(distinct [RA.Original Transaction Number]),'#,##0')",singleValueData:[{id:"currentValue",type:"value",expression:"=Num(Count(distinct [RA.Original Transaction Number]),'#,##0')"},{id:"previousValue",type:"value",expression:`=Num(Count(distinct {<RA.${PREV_YEAR}>} [RA.Original Transaction Number]),'#,##0')`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vCurrentYearKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:100,kpi:"TotalSpentOnRentals",app:"rentalActivity",additionalData:{periodType:"THIS_YEAR",type:"AREA_CHART",name:"Total Spent on Rentals",kpi:1,toggle:"LB1",round:0},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RA.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")},{id:"_checkPreviousPeriod",type:"value",expression:t("rentalActivity","PREV_YEAR")},{id:"_checkChartPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")},{id:"OracleData1",type:"text",expression:"=GetFieldSelections(OracleData.COUNTRY)"},{id:"OracleData2",type:"text",expression:"=GetFieldSelections(OracleData.PROD_LN)"},{id:"OracleData3",type:"text",expression:"=GetFieldSelections(OracleData.USERID)"}],cubeData:[{id:"series",dimension:"RA.H_MonthYearShort",measure:"=Num(Sum([RA.Rental Total]), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"=Num(Sum([RA.Rental Total]), MoneyFormat)"},{id:"previousValue",type:"value",expression:`=Num(Sum({<RA.${PREV_YEAR}>} [RA.Rental Total]), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vCurrentYearKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:71,kpi:"TopRentalDurations",app:"rentalActivity",additionalData:{periodType:"THIS_YEAR",type:"LIST",name:"Top Rental Durations",kpi:2,sort:"desc"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RA.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")}],cubeData:[{id:"series",dimension:"RA.Duration",measure:"$(vDuration)",additionalData:{config:[{keyName:"Duration",valueName:"Rentals"}]}}],defData:[{id:"seriesDef",dimension:"RA.Duration",measure:"=Sum({1<RA.Duration=-{'Others'}>} 0)"}],transform:e=>(i(e),"0-1 Week"==e?.data[0]?.series[0]?.key&&(e.data[0].series[0].key="Under 1 Week"),e)},{id:99,kpi:"TopRentalEquipmentCosts",app:"rentalActivity",additionalData:{periodType:"THIS_YEAR",type:"DATA_BAR",name:"Rental Equipment Costs",kpi:3},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RA.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([RA.Rental Total]),4,0)<=3,[RA.Equipment],'NULL'),([RA.Equipment],(TEXT,ASCENDING)))",measure:"=Num(Sum([RA.Rental Total]), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"total",type:"value",expression:"=Num(Sum([RA.Rental Total]), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:98,kpi:"TopPenskeLocations",app:"rentalActivity",additionalData:{periodType:"THIS_YEAR",type:"DATA_BAR",name:"Penske Location Rental Costs",kpi:4,toggle:"RT1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RA.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([RA.Rental Total]),4,0)<=3,[RA.Rental Location Name],'NULL'),([RA.Rental Location Name],(TEXT,ASCENDING)))",measure:"=Num(Sum([RA.Rental Total]), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"total",type:"value",expression:"=Num(Sum([RA.Rental Total]), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:97,kpi:"TopYourLocations",app:"rentalActivity",additionalData:{periodType:"THIS_YEAR",type:"DATA_BAR",name:"Your Locations Rental Costs",kpi:4,toggle:"RT2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RA.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("rentalActivity","CURR_YEAR")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([RA.Rental Total]),4,0)<=3,[RA.Customer Location],'NULL'),([RA.Customer Location],(TEXT,ASCENDING)))",measure:"=Num(Sum([RA.Rental Total]), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"total",type:"value",expression:"=Num(Sum([RA.Rental Total]), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:103,kpi:"SpecialCharges",app:"specialCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Special Charges",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("SC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("specialCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("specialCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("specialCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"SC.H_MonthYearShort",measure:`Num(Sum(${t("specialCharges","PREV_12_MONTHS",2)} SC.Total_Amt),MoneyFormat)`,additionalData:{valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(Sum(SC.Total_Amt), MoneyFormat)"},{id:"previousValue",type:"value",expression:`Num(Sum(${t("specialCharges","CURR_MONTH_LY",2)} SC.Total_Amt), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:102,kpi:"Non-UnitSpecialCharges",app:"specialCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Non-Unit Special Charges",kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("SC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("specialCharges","CURR_MONTH",1,'[SC.Penske Unit]={"NON-UNIT"},')},{id:"_checkPreviousPeriod",type:"value",expression:t("specialCharges","CURR_MONTH_LY",1,'[SC.Penske Unit]={"NON-UNIT"},')},{id:"_checkChartPeriod",type:"value",expression:t("specialCharges","PREV_12_MONTHS",1,'[SC.Penske Unit]={"NON-UNIT"},')}],cubeData:[{id:"series",dimension:"SC.H_MonthYearShort",measure:`Num(sum(${t("specialCharges","PREV_12_MONTHS",2,'[SC.Penske Unit]={"NON-UNIT"},')} SC.Total_Amt), MoneyFormat)`,additionalData:{valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(Sum({<[SC.Penske Unit]={'NON-UNIT'}>} SC.Total_Amt), MoneyFormat)"},{id:"previousValue",type:"value",expression:`Num(Sum(${t("specialCharges","CURR_MONTH_LY",2,'[SC.Penske Unit]={"NON-UNIT"},')} SC.Total_Amt), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:101,kpi:"UnitsSpecialCharges",app:"specialCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Units with Special Charges",kpi:3},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("SC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("specialCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([SC.Total_Amt]),4,0)<=3,[SC.Penske Unit],'NULL'),([SC.Penske Unit],(TEXT,ASCENDING)))",measure:"=Num(Sum(SC.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"total",type:"value",expression:"Num(Sum(SC.Total_Amt), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:114,kpi:"ContractCharges",app:"contractCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Contract Charges",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("CC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("contractCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("contractCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("contractCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"CC.H_MonthYearShort",measure:`=Num(Sum(${t("contractCharges","PREV_12_MONTHS",2)} CC.Total_Amt), MoneyFormat)`,additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(Sum(CC.Total_Amt), MoneyFormat)"},{id:"previousValue",type:"value",expression:`Num(Sum(${t("contractCharges","CURR_MONTH_LY",2)} CC.Total_Amt), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:115,kpi:"VehicleContractCharges",app:"contractCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Contract Charges"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("CC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("contractCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([CC.Total_Amt]),4,0)<=3,[CC.Category],'NULL'),([CC.Category],(TEXT,ASCENDING)))",measure:"=Num(Sum(CC.Total_Amt), MoneyFormat)",additionalData:{type:"VEHICLE",valueType:"CURRENCY",name:"Contract Charges (Vehicles)",kpi:2},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(CC.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(pick(match(CC.Charge_Type,'Fixed', 'Mileage', 'Reefer', 'Standby','Adjust','Tax'),\n                                Sum(CC.Fix_Amt),\n                                Sum(CC.Mile_Amt),\n                                Sum(CC.Reefer_Amt),\n                                Sum(CC.StandBy_Amt),\n                                Sum(CC.Adjust_Amt),\n                                Sum(CC.Tax_Amt)),4,2)<=3,[CC.Charge_Type],'NULL'),([CC.Charge_Type],(TEXT,ASCENDING)))",measure:"=pick(match(CC.Charge_Type,'Fixed', 'Mileage', 'Reefer', 'Standby','Adjust','Tax'),\n                                Sum(CC.Fix_Amt),\n                                Sum(CC.Mile_Amt),\n                                Sum(CC.Reefer_Amt),\n                                Sum(CC.StandBy_Amt),\n                                Sum(CC.Adjust_Amt),\n                                Sum(CC.Tax_Amt))",additionalData:{type:"TYPE",valueType:"CURRENCY",name:"Contract Charges (Types)",kpi:3},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(CC.Total_Amt), MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:116,kpi:"TotalCharges",app:"totalCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Total Charges",kpi:1,toggle:"RB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("TC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("totalCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("totalCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("totalCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"TC.H_MonthYearShort",measure:`Num(Sum(${t("totalCharges","PREV_12_MONTHS",2)} TC.Total_Amt) + SUM(${t("totalCharges","PREV_12_MONTHS",2)} TC.Total_Amt_Lease) + SUM(${t("totalCharges","PREV_12_MONTHS",2)} TC.Total_Amt_Fuel) + SUM(${t("totalCharges","PREV_12_MONTHS",2)} TC.Total_Amt_Special) + SUM(${t("totalCharges","PREV_12_MONTHS",2)} TC.Total_Amt_Rental_Commr + TC.Total_Amt_Rental_Lease), MoneyFormat)`,additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(SUM(TC.Total_Amt)+SUM(TC.Total_Amt_Lease)+SUM(TC.Total_Amt_Fuel)+SUM(TC.Total_Amt_Special)+SUM(TC.Total_Amt_Rental_Commr+TC.Total_Amt_Rental_Lease), MoneyFormat)"},{id:"previousValue",type:"value",expression:`NUM(Sum(${t("totalCharges","CURR_MONTH_LY",2)} TC.Total_Amt)+Sum(${t("totalCharges","CURR_MONTH_LY",2)} TC.Total_Amt_Lease)+SUM(${t("totalCharges","CURR_MONTH_LY",2)} TC.Total_Amt_Fuel)+SUM(${t("totalCharges","CURR_MONTH_LY",2)} TC.Total_Amt_Special)+SUM(${t("totalCharges","CURR_MONTH_LY",2)} TC.Total_Amt_Rental_Commr+TC.Total_Amt_Rental_Lease), MoneyFormat)`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:117,kpi:"TotalChargesByType",app:"totalCharges",additionalData:{periodType:"THIS_MONTH",type:"THERMOSTAT",name:"Total Charges (By Type)",kpi:1,toggle:"RB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("TC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("totalCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"TC.Charge_Type",measure:"=pick(match(only({$<TC.Charge_Type=>} TC.Charge_Type),'Contract', 'Fuel', 'Maintenance', 'Special','Rental'), NUM(Sum({<TC.Charge_Type={\"Contract\", \"Fuel\", \"Maintenance\", \"Special\",\"Rental\"}>} TC.Total_Amt_Lease),MoneyFormat), NUM(Sum({<TC.Charge_Type=>} TC.Total_Amt_Fuel),MoneyFormat), NUM(Sum({<TC.Charge_Type=>} TC.Total_Amt),MoneyFormat),\n                               NUM(Sum({<TC.Charge_Type=>} TC.Total_Amt_Special), MoneyFormat),\n                               NUM(Sum({<TC.Charge_Type=>} TC.Total_Amt_Rental_Commr + TC.Total_Amt_Rental_Lease), MoneyFormat)) ",additionalData:{type:"DOLLARS",valueType:"CURRENCY"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(SUM(TC.Total_Amt)+SUM(TC.Total_Amt_Lease)+SUM(TC.Total_Amt_Fuel)+SUM(TC.Total_Amt_Special)+SUM(TC.Total_Amt_Rental_Commr + TC.Total_Amt_Rental_Lease),MoneyFormat)"}]}],transform:e=>(i(e),e)},{id:91,kpi:"InvoicedFuelCharges",app:"fuelCharges",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Invoiced Fuel",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelCharges","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("fuelCharges","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("fuelCharges","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"FC.H_MonthYearShort",measure:`=Num(Sum(${t("fuelCharges","PREV_12_MONTHS",2)} FC.Total_Amt), MoneyFormat)`,additionalData:{type:"DOLLARS",valueType:"CURRENCY",name:"Invoiced Fuel Charges",toggle:"RT1"},singleValueData:[{id:"currentValue",type:"value",expression:"=Num(Sum(FC.Total_Amt), MoneyFormat)"},{id:"previousValue",type:"value",expression:`=Num(Sum(${t("fuelCharges","CURR_MONTH_LY",2)} FC.Total_Amt), MoneyFormat )`}]},{id:"series2",dimension:"FC.H_MonthYearShort",measure:`=Sum(${t("fuelCharges","PREV_12_MONTHS",2)} FC.FuelGallons)`,additionalData:{type:"QUANTITY",name:"Invoiced Fuel Quantity",toggle:"RT2"},singleValueData:[{id:"currentValue",type:"value",expression:"Sum(FC.FuelGallons)"},{id:"previousValue",type:"value",expression:`Sum(${t("fuelCharges","CURR_MONTH_LY",2)} FC.FuelGallons)`},{id:"valueType",type:"text",expression:`If('${e.fuelCharges.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:92,kpi:"FuelChargesUnits",app:"fuelCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Invoiced Fuel (Units)",kpi:4,toggle:"LB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FC.Total_Amt]),4,0)<=3,[FC.Penske Unit],'NULL'),([FC.Penske Unit],(TEXT,DESCENDING)))",measure:"=Num(Sum(FC.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FC.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FC.FuelGallons]),4,0)<=3,[FC.Penske Unit],'NULL'),([FC.Penske Unit],(TEXT,DESCENDING)))",measure:"=Sum([FC.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FC.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelCharges.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:93,kpi:"FuelChargesLocations",app:"fuelCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Invoiced Fuel (Locations)",kpi:4,toggle:"LB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FC.Total_Amt]),4,0)<=3,[FC.Location],'NULL'),([FC.Location],(TEXT,DESCENDING)))",measure:"=Num(Sum(FC.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"=Num(Sum(FC.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FC.FuelGallons]),4,0)<=3,[FC.Location],'NULL'),([FC.Location],(TEXT,DESCENDING)))",measure:"=Sum(FC.FuelGallons)",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"=Sum(FC.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelCharges.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:94,kpi:"FuelChargesTypes",app:"fuelCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Invoiced Fuel (Types)",kpi:2},singleValueData:[{id:"lastUpdated",type:"value",type:"text",expression:`${APP_UPDATE("FC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FC.Total_Amt]),4,0)<=3,[FC.Fuel Type],'NULL'),([FC.Fuel Type],(TEXT,DESCENDING)))",measure:"=Num(Sum(FC.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FC.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FC.FuelGallons]),4,0)<=3,[FC.Fuel Type],'NULL'),([FC.Fuel Type],(TEXT,DESCENDING)))",measure:"=Sum(FC.FuelGallons)",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"=Sum(FC.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelCharges.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:95,kpi:"FuelChargesUses",app:"fuelCharges",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Invoiced Fuel (Uses)",kpi:3},singleValueData:[{id:"lastUpdated",type:"value",type:"text",expression:`${APP_UPDATE("FC.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelCharges","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FC.Total_Amt]),4,0)<=3,[FC.Fuel Use],'NULL'),([FC.Fuel Use],(TEXT,DESCENDING)))",measure:"=Num(Sum(FC.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FC.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FC.FuelGallons]),4,0)<=3,[FC.Fuel Use],'NULL'),([FC.Fuel Use],(TEXT,DESCENDING)))",measure:"=Sum(FC.FuelGallons)",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"=Sum(FC.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelCharges.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:29,kpi:"Top5RoadcallComponentCodesMonthly",app:"24x7",additionalData:{type:"24x7",period:"monthly",kpi_events:3,kpi_events_over:2,kpi_avg_downtime:1,kpi_top_comp_codes:4},singleValueData:[{id:"_checkChartPeriod",type:"value",expression:t("24x7","PREV_15_MONTHS")}],cubeData:[{id:"series",dimension:["RS.PARTITION_KEY","RS.Comp Code New"],measure:`=Count(${t("24x7","PREV_15_MONTHS",2)} [RS.Roadside Incidents])`,topField:"RS.Comp Code New",topValues:"10"},{id:"series2",dimension:"RS.PARTITION_KEY",measure:{year:`=Only(${t("24x7","PREV_15_MONTHS",2)} [RS.Calendar.YEAR])`,month:`Num(Only(${t("24x7","PREV_15_MONTHS",2)} [RS.Calendar.MONTH]),'00')`,totalIncidents:`=Count(${t("24x7","PREV_15_MONTHS",2)} [RS.Roadside Incidents])`,avgDowntime:`=Num(sum(${t("24x7","PREV_15_MONTHS",2)} RS.DowntimeAmt)/count(${t("24x7","PREV_15_MONTHS",2)} [RS.Roadside Incidents]),'##0.0')`,incidents4Hrs:`=Num(sum(${t("24x7","PREV_15_MONTHS",2)} [RS.Assist Time2]),'##0')`}}],transform:e=>(i(e),e)},{id:30,kpi:"Top5RoadcallComponentCodesQuarterly",app:"24x7",additionalData:{type:"24x7",period:"quarterly",kpi_events:3,kpi_events_over:2,kpi_avg_downtime:1,kpi_top_comp_codes:4},singleValueData:[{id:"_checkChartPeriod",type:"value",expression:t("24x7","PREV_4_QUARTERS")}],cubeData:[{id:"series",dimension:["RS.QuarterYear","RS.Comp Code New"],measure:`=Count(${t("24x7","PREV_4_QUARTERS",2)} [RS.Roadside Incidents])`,topField:"RS.Comp Code New",topValues:"15"},{id:"series2",dimension:"RS.QuarterYear",measure:{year:`=Only(${t("24x7","PREV_4_QUARTERS",2)} [RS.Calendar.YEAR])`,quarter:`=Only(${t("24x7","PREV_4_QUARTERS",2)} [RS.H_Quarter])`,totalIncidents:`=Count(${t("24x7","PREV_4_QUARTERS",2)} [RS.Roadside Incidents])`,avgDowntime:`=Num(sum(${t("24x7","PREV_4_QUARTERS",2)} RS.DowntimeAmt)/count(${t("24x7","PREV_4_QUARTERS",2)} [RS.Roadside Incidents]),'##0.0')`,incidents4Hrs:`=Num(sum(${t("24x7","PREV_4_QUARTERS",2)} [RS.Assist Time2]),'##0')`}}],transform:e=>(i(e),e)},{id:104,kpi:"AverageDowntime",app:"24x7",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Average Downtime",round:1,test:e["24x7"].selections,test2:e["24x7"].selections[0].value,kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RS.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("24x7","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("24x7","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("24x7","PREV_12_MONTHS")},{id:"_checkCurrentSelection",type:"text",expression:"=GetCurrentSelections('; ','=')"},{id:"_checkCountrySelection",type:"text",expression:"=GetFieldSelections(RS.Country)"}],cubeData:[{id:"series",dimension:"RS.H_MonthYearShort",measure:`Num(sum(${t("24x7","PREV_12_MONTHS",2)} RS.DowntimeAmt)/count(${t("24x7","PREV_12_MONTHS",2)} [RS.Roadside Incidents]),if(Frac(Round(sum(${t("24x7","PREV_12_MONTHS",2)} RS.DowntimeAmt)/count(${t("24x7","PREV_12_MONTHS",2)} [RS.Roadside Incidents]),0.1))>0,'##0.0','##0'))`,additionalData:{valueType:"HOURS"},singleValueData:[{id:"currentValue",type:"value",expression:"Num(sum(RS.DowntimeAmt)/count([RS.Roadside Incidents]),if(Frac(Round(sum(RS.DowntimeAmt)/count([RS.Roadside Incidents]),0.1))>0,'##0.0','##0'))"},{id:"previousValue",type:"value",expression:`Num(sum(${t("24x7","CURR_MONTH_LY",2)} RS.DowntimeAmt)/count(${t("24x7","CURR_MONTH_LY",2)} [RS.Roadside Incidents]),if(Frac(Round(sum(${t("24x7","CURR_MONTH_LY",2)} RS.DowntimeAmt)/count(${t("24x7","CURR_MONTH_LY",2)} [RS.Roadside Incidents]),0.1))>0,'##0.0','##0'))`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:105,kpi:"RoadsideEvents",app:"24x7",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Roadside Events",kpi:3},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RS.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("24x7","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("24x7","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("24x7","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"RS.H_MonthYearShort",measure:`Count(${t("24x7","PREV_12_MONTHS",2)} [RS.Roadside Incidents])`,singleValueData:[{id:"currentValue",type:"value",expression:"Count([RS.Roadside Incidents])"},{id:"previousValue",type:"value",expression:`Count(${t("24x7","CURR_MONTH_LY",2)} [RS.Roadside Incidents])`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:111,kpi:"RoadsideEventDurations",app:"24x7",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Roadside Event Durations",kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RS.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("24x7","CURR_MONTH")}],cubeData:[{id:"series",dimension:"RS.Event_Duration",measure:"=count([RS.Roadside Incidents])",additionalData:{valueType:"EVENTS"},singleValueData:[{id:"total",type:"value",expression:"=count([RS.Roadside Incidents])"}]}],transform:e=>(i(e),e)},{id:112,kpi:"RoadsideEventCauses",app:"24x7",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Roadside Event Causes",kpi:4},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("RS.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("24x7","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(count([RS.Roadside Incidents]),4,0)<=3,[RS.Comp Code Desc],'NULL'),([RS.Comp Code Desc],(TEXT,ASCENDING)))",measure:"=count([RS.Roadside Incidents])",additionalData:{valueType:"EVENTS"},singleValueData:[{id:"total",type:"value",expression:"=count([RS.Roadside Incidents])"}]}],transform:e=>(i(e),e)},{id:118,kpi:"UnitsOverContractMiles",app:"CMVariance",additionalData:{periodType:"LIFE_TO_DATE",type:"LIST",name:"US"==e.CMVariance.selections[0].value?"Units Over Contract Miles":"Units Over Contract KMs",sort:"desc",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("CMV.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("CMVariance","LIFE_TO_DATE")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Max([CMV.LTD Contract Variance %p]),4,0)<=5,[CMV.Penske Unit],'NULL'),([CMV.Penske Unit],(TEXT,ASCENDING)))",measure:"=Max([CMV.LTD Contract Variance %p])*100",additionalData:{config:[{keyName:"Top 5",valueName:"% Over",valueType:"PERCENTAGE_POSITIVE"}]}}],transform:e=>(i(e),e)},{id:119,kpi:"UnitsUnderContractMiles",app:"CMVariance",additionalData:{periodType:"LIFE_TO_DATE",type:"LIST",name:"US"==e.CMVariance.selections[0].value?"Units Under Contract Miles":"Units Under Contract KMs",sort:"asc",kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("CMV.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("CMVariance","LIFE_TO_DATE")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Max([CMV.LTD Contract Variance %n])*(-1),4,0)<=5,[CMV.Penske Unit],'NULL'),([CMV.Penske Unit],(TEXT,ASCENDING)))",measure:"=Max([CMV.LTD Contract Variance %n])*100",additionalData:{config:[{keyName:"Top 5",valueName:"% Under",valueType:"PERCENTAGE_NEGATIVE"}]}}],transform:e=>(i(e),e)},{id:113,kpi:"UnitsPMnotCompleted",app:"PMCompliance",additionalData:{periodType:"PREV_MONTH",type:"AREA_CHART",name:"Units PM not Completed",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("PM.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("PMCompliance","PREV_MONTH_PM")},{id:"_checkPreviousPeriod",type:"value",expression:t("PMCompliance","PREV_MONTH_LY_PM")},{id:"_checkChartPeriod",type:"value",expression:t("PMCompliance","PREV_12_MONTHS_FROM_LM_PM")}],cubeData:[{id:"series",dimension:"PM.H_MonthYearShort",measure:`=Sum(${t("PMCompliance","PREV_12_MONTHS_FROM_LM_PM",2)} Aggr(Count(DISTINCT ${t("PMCompliance","PREV_12_MONTHS_FROM_LM_PM",2)} PM.Unit_no_current), PM.PARTITION_KEY))`,singleValueData:[{id:"currentValue",type:"value",expression:`=Sum(${t("PMCompliance","PREV_MONTH_PM",2)} Aggr(Count(DISTINCT ${t("PMCompliance","PREV_MONTH_PM",2)} PM.Unit_no_current), PM.PARTITION_KEY))`},{id:"previousValue",type:"value",expression:`=Sum(${t("PMCompliance","PREV_MONTH_LY_PM",2)} Aggr(Count(DISTINCT ${t("PMCompliance","PREV_MONTH_LY_PM",2)} PM.Unit_no_current), PM.PARTITION_KEY))`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI_Prev))",measure:"=0"}],transform:e=>(i(e),e)},{id:27,kpi:"NotComplitedMonthly",app:"PMCompliance",additionalData:{type:"PM",period:"monthly",kpi:2},singleValueData:[{id:"_checkChartPeriod",type:"value",expression:t("PMCompliance","PREV_14_MONTHS")}],cubeData:[{id:"series",dimension:"PM.PARTITION_KEY",measure:{year:`=Only(${t("PMCompliance","PREV_14_MONTHS",2)} [PM.Calendar.Year])`,month:`Num(Only(${t("PMCompliance","PREV_14_MONTHS",2)} [PM.Calendar.Month]),'00')`,pmNotDoneUnitCount:`=Sum(${t("PMCompliance","PREV_14_MONTHS",2)} Aggr(Count(DISTINCT ${t("PMCompliance","PREV_14_MONTHS",2,"PM.PMNotCurrentFlag={1}, ")} PM.Unit_no_current), PM.PARTITION_KEY))`,totalUnitCount:`=Sum(${t("PMCompliance","PREV_14_MONTHS",2)} PM.EOM_Count)`}}],transform:e=>(i(e),e)},{id:28,kpi:"NotComplitedQuarterly",app:"PMCompliance",additionalData:{type:"PM",period:"quarterly",kpi:2},singleValueData:[{id:"_checkChartPeriod",type:"value",expression:t("PMCompliance","PREV_4_QUARTERS_PM")}],cubeData:[{id:"series",dimension:"PM.QuarterYear",measure:{year:`=Only(${t("PMCompliance","PREV_4_QUARTERS_PM",2)} [PM.Calendar.Year])`,quarter:`Only(${t("PMCompliance","PREV_4_QUARTERS_PM",2)} [PM.Calendar.Quarter])`,pmNotDoneUnitCount:`=Sum(${t("PMCompliance","PREV_4_QUARTERS_PM",2)} Aggr(Count(DISTINCT ${t("PMCompliance","PREV_4_QUARTERS_PM",2,"PM.PMNotCurrentFlag={1}, ")} PM.Unit_no_current), PM.PARTITION_KEY))`,totalUnitCount:`=Sum(${t("PMCompliance","PREV_4_QUARTERS_PM",2)} PM.EOM_Count)`}}],transform:e=>(i(e),e)},{id:87,kpi:"NonInvoicedFuelUnits",app:"fuelNonInvoiced",additionalData:{periodType:"CURRENTLY",type:"DATA_BAR",name:"Non-Invoiced Fuel (Units)",kpi:4,toggle:"LB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FNI.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelNonInvoiced","CURRENTLY")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FNI.Total_Amt]),4,0)<=3,[FNI.Penske Unit],'NULL'),([FNI.Penske Unit],(TEXT,DESCENDING)))",measure:"=Num(Sum(FNI.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FNI.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FNI.FuelGallons]),4,0)<=3,[FNI.Penske Unit],'NULL'),([FNI.Penske Unit],(TEXT,DESCENDING)))",measure:"=Sum([FNI.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FNI.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelNonInvoiced.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:88,kpi:"NonInvoicedFuelLocations",app:"fuelNonInvoiced",additionalData:{periodType:"CURRENTLY",type:"DATA_BAR",name:"Non-Invoiced Fuel (Locations)",kpi:4,toggle:"LB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FNI.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelNonInvoiced","CURRENTLY")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FNI.Total_Amt]),4,0)<=3,[FNI.Location],'NULL'),([FNI.Location],(TEXT,DESCENDING)))",measure:"=Num(Sum(FNI.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FNI.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FNI.FuelGallons]),4,0)<=3,[FNI.Location],'NULL'),([FNI.Location],(TEXT,DESCENDING)))",measure:"=Sum([FNI.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FNI.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelNonInvoiced.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:89,kpi:"NonInvoicedFuelTypes",app:"fuelNonInvoiced",additionalData:{periodType:"CURRENTLY",type:"DATA_BAR",name:"Non-Invoiced Fuel (Types)",kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FNI.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelNonInvoiced","CURRENTLY")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FNI.Total_Amt]),4,0)<=3,[FNI.Fuel Type],'NULL'),([FNI.Fuel Type],(TEXT,DESCENDING)))",measure:"=Num(Sum(FNI.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FNI.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FNI.FuelGallons]),4,0)<=3,[FNI.Fuel Type],'NULL'),([FNI.Fuel Type],(TEXT,DESCENDING)))",measure:"=Sum([FNI.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FNI.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelNonInvoiced.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:90,kpi:"NonInvoicedFuelUses",app:"fuelNonInvoiced",additionalData:{periodType:"CURRENTLY",type:"DATA_BAR",name:"Non-Invoiced Fuel (Uses)",kpi:3},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FNI.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelNonInvoiced","CURRENTLY")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FNI.Total_Amt]),4,0)<=3,[FNI.Fuel Use],'NULL'),([FNI.Fuel Use],(TEXT,DESCENDING)))",measure:"=Num(Sum(FNI.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FNI.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FNI.FuelGallons]),4,0)<=3,[FNI.Fuel Use],'NULL'),([FNI.Fuel Use],(TEXT,DESCENDING)))",measure:"=Sum([FNI.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FNI.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelNonInvoiced.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:81,kpi:"TotalFuelPumped",app:"fuelPumped",additionalData:{periodType:"THIS_MONTH",type:"AREA_CHART",name:"Total Fuel Pumped",kpi:1},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FP.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelPumped","CURR_MONTH")},{id:"_checkPreviousPeriod",type:"value",expression:t("fuelPumped","CURR_MONTH_LY")},{id:"_checkChartPeriod",type:"value",expression:t("fuelPumped","PREV_12_MONTHS")}],cubeData:[{id:"series",dimension:"FP.H_MonthYearShort",measure:`=Num(Sum(${t("fuelPumped","PREV_12_MONTHS",2)} FP.Total_Amt), MoneyFormat)`,additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"currentValue",type:"value",expression:"=Num(Sum(FP.Total_Amt), MoneyFormat)"},{id:"previousValue",type:"value",expression:`=Num(Sum(${t("fuelPumped","CURR_MONTH_LY",2)} FP.Total_Amt), MoneyFormat )`}]},{id:"series2",dimension:"FP.H_MonthYearShort",measure:`=Sum(${t("fuelPumped","PREV_12_MONTHS",2)} FP.FuelGallons)`,additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"currentValue",type:"value",expression:"Sum(FP.FuelGallons)"},{id:"previousValue",type:"value",expression:`Sum(${t("fuelPumped","CURR_MONTH_LY",2)} FP.FuelGallons)`},{id:"valueType",type:"text",expression:`If('${e.fuelPumped.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],defData:[{id:"seriesDef",dimension:"=ValueList($(vLast12MonthsKPI))",measure:"=0"}],transform:e=>(i(e),e)},{id:82,kpi:"FuelPumpedUnits",app:"fuelPumped",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Fuel Pumped (Units)",kpi:4,toggle:"LB2"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FP.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelPumped","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FP.Total_Amt]),4,0)<=3,[FP.Penske Unit],'NULL'),([FP.Penske Unit],(TEXT,DESCENDING)))",measure:"=Num(Sum(FP.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FP.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FP.FuelGallons]),4,0)<=3,[FP.Penske Unit],'NULL'),([FP.Penske Unit],(TEXT,DESCENDING)))",measure:"=Sum([FP.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FP.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelPumped.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:83,kpi:"FuelPumpedLocation",app:"fuelPumped",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Fuel Pumped (Locations)",kpi:4,toggle:"LB1"},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FP.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelPumped","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FP.Total_Amt]),4,0)<=3,[FP.Location],'NULL'),([FP.Location],(TEXT,DESCENDING)))",measure:"=Num(Sum(FP.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FP.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FP.FuelGallons]),4,0)<=3,[FP.Location],'NULL'),([FP.Location],(TEXT,DESCENDING)))",measure:"=Sum([FP.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FP.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelPumped.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:84,kpi:"FuelPumpedTypes",app:"fuelPumped",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Fuel Pumped (Types)",kpi:2},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FP.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelPumped","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FP.Total_Amt]),4,0)<=3,[FP.Fuel Type],'NULL'),([FP.Fuel Type],(TEXT,DESCENDING)))",measure:"=Num(Sum(FP.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FP.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FP.FuelGallons]),4,0)<=3,[FP.Fuel Type],'NULL'),([FP.Fuel Type],(TEXT,DESCENDING)))",measure:"=Sum([FP.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FP.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelPumped.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:85,kpi:"FuelPumpedUses",app:"fuelPumped",additionalData:{periodType:"THIS_MONTH",type:"DATA_BAR",name:"Fuel Pumped (Uses)",kpi:3},singleValueData:[{id:"lastUpdated",type:"text",expression:`${APP_UPDATE("FP.")}`},{id:"_checkCurrentPeriod",type:"value",expression:t("fuelPumped","CURR_MONTH")}],cubeData:[{id:"series",dimension:"=Aggr(if(Rank(Sum([FP.Total_Amt]),4,0)<=3,[FP.Fuel Use],'NULL'),([FP.Fuel Use],(TEXT,DESCENDING)))",measure:"=Num(Sum(FP.Total_Amt), MoneyFormat)",additionalData:{type:"DOLLARS",valueType:"CURRENCY",toggle:"RT1"},singleValueData:[{id:"totalAmount",type:"value",expression:"Num(Sum(FP.Total_Amt), MoneyFormat)"}]},{id:"series2",dimension:"=Aggr(if(Rank(Sum([FP.FuelGallons]),4,0)<=3,[FP.Fuel Use],'NULL'),([FP.Fuel Use],(TEXT,DESCENDING)))",measure:"=Sum([FP.FuelGallons])",additionalData:{type:"QUANTITY",toggle:"RT2"},singleValueData:[{id:"totalAmount",type:"value",expression:"Sum(FP.FuelGallons)"},{id:"valueType",type:"text",expression:`If('${e.fuelPumped.selections[0].value}'='US', 'GALLONS', 'LITERS')`}]}],transform:e=>(i(e),e)},{id:999,kpi:"OracleVerificationList",app:"Oracle",additionalData:{type:"TABLE"},singleValueData:[{id:"dummy",type:"text",expression:"0"}],cubeData:[{id:"series",dimension:["OracleData.USERID","OracleData.COMPANYID","OracleData.GROUPID","OracleData.COUNTRY","OracleData.PROD_LN","OracleData.SECURITY_TYPE"],measure:"=Count({1} 1)"}],transform:e=>{const a=e.data[0].series;let t=[];return a.map((e=>{let a=[];switch(e[5].text){case"USER":a.push({key:"userid",value:e[0].text});break;case"COMPANY":a.push({key:"companyid",value:e[1].text});break;case"GROUP":a.push({key:"groupid",value:e[2].text})}a.push({key:"country",value:e[3].text}),"A"!=e[4].text&&a.push({key:"productLine",value:e[4].text}),t.push(a)})),console.log(t),t}}];return 0!=a&&r.map((e=>{e?.singleValueData.push({id:"OracleData",type:"text",expression:`=Only({<OracleData.KPI_ID={"${e?.id}"}>} OracleData.VALUE)`}),e?.singleValueData.push({id:"CheckOracleSel",type:"value",expression:t("Oracle","CURRENTLY").replaceAll("H_Group.","")})})),r}export{getKpiConfig};